15.207.21.1
user - centos
Pass - centos123
=========================
https://www.devopsschool.com/tutorial/docker/commands/index.html

cp	Copy files/folders between a container and the local filesystem
---------------
 335  docker ps
  336  docker exec 65a8c1838f40 ls /opt
  337  docker cp get-docker.sh 65a8c1838f40:/opt
  338  docker exec 65a8c1838f40 ls /opt
  339  ls
  340  rm -f get-docker.sh
  341  clear
  342  docker exec 65a8c1838f40 ls /opt
  343  ls
  344  docker cp 65a8c1838f40:/opt/get-docker.sh .
  345  ls
  346  history

diff	Inspect changes to files or directories on a container's filesystem
---------------
	ADDED
	CHANGED
	DELETED

  349  docker ps
  350  docker attach 65a8c1838f40
  351  clear
  352  ls
  353  docker ps
  354  docker diff 65a8c1838f40

inspect	Return low-level information on Docker objects
---------------
	Docker objects
	- Container
	- Image
	- Volume
	- Networking
	- plugins

  355  history
  356  clear
  357  docker ps
  358  docker inspect 65a8c1838f40
  359  clear
  360  docker images
  361  docker inspect jenkins/jenkins
  362  history

	
---------------------------
port	List port mappings or a specific mapping for the container

  365  docker port 65a8c1838f40
  366  docker run -d jenkins/jenkins
  367  docker ps
  368  docker port 378d65bab8e4
  369  docker run -d -p 8080:8080 jenkins/jenkins
  370  docker port 378d65bab8e4
  371  docker port c375e3b62f9a5999c7f040a5271254d5be8e2b516c1d82d73eff97f612f69e90
  372  history

Rename
---------------
  373  clear
  374  docker ps
  375  docker rename c375e3b62f9a jenkins1
  376  docker ps
  377  docker run -itd --name ub1 ubuntu
  378  docker ps
  379  history

Assignment
-------------------
update	Update configuration of one or more containers
wait	Block until one or more containers stop, then print their exit codes

logs	Fetch the logs of a container - PID1  Log
-------------------------------------------
	
  377  docker run -itd --name ub1 ubuntu
  378  docker ps
  379  history
  380  clear
  381  docker ps
  382  docker logs 83b0bace2733
  383  docker logs 83b0bace2733
  384  docker logs 83b0bace2733
  385  docker logs 83b0bace2733
  386  clear
  387  docker ps
  388  docker lo

stats	Display a live stream of container(s) resource usage statistics
	CPU
	RAM
	DISK
	NET

  392  docker stats
  393  docker stats 00ec009720b6


top	Display the running processes of a container
 396  docker ps
  397  ps -eaf | grep containerd
  398  docker top 00ec009720b6
  399  clear



 402  docker events
  403  docker help events
  404  docker help --format events
  405  docker help events
  406  clear
  407  docker help events
  408  docker events
============================================================================
Docker Image = ROOTFS + USERFS + APPFS
		ubuntu = rfs + ufs
		centos = rfs + ufs
		jenkins = rfs + ufs + java + jenkins


Vms Image = BOOTFS + 	ROOTFS + USERFS + APPFS
	    (LINUX KER)	ubuntu   root
  	    (WIN KER)   win2019  administrator

	- ONE COPY of Docker Image GET MOUNTED TO EACH USER aka container
	- From One image you can create multiple container.

======================================================================
Images has multiple Layers
Each layer is filesystem
Layer0 = always - rootfs
When we create a container - All the layers get merged into ONE
		MOUNTED TO Container Process.


 419  docker stop $(docker ps -a -q)
  420  docker rm $(docker ps -a -q)
  421  clear
  422  docker ps -a
  423  docker images
  424  docker rmi tomcat alpine jenkins/jenkins postgres ubuntu nginx httpd bash centos
  425  clear
  426  docker images
  427  docker ps -a
  428  docker info
  429  clear
  430  cd /var/lib/docker
  431  ls
  432  docker info
  433  clear
  434  ls
  435  pwd
  436  ls -1
  437  history


[root@ip-172-31-2-101 docker]# ls -1
buildkit
containers		# Meta info for the container
image			# Meta info for the image
network			# ???
overlay2		# Image data layer are present
plugins
runtimes
swarm
tmp
trust
volumes			# ???
[root@ip-172-31-2-101 docker]#


439  cd overlay2
  440  pwd
  441  clear
  442  ls
  443  du -sh .
  444  docker pull ubuntu
  445  ls
  446  clear
  447  ls
  448  docker images
  449  docker inspect ubuntu
  450  ls
  451  clear
  452  docker inspect ubuntu
  453  ls
  454  du -sh --max-depth=1
  455  du -h --max-depth=1
  456  docker history ubuntu
  457  docker images
  458  ls
  459  clear
  460  du -h --max-depth=1
  461  cd ./beecd546850be4721c98abccfd47e55ebf903fce4aaf4ce5306997c7e87a2cda
  462  ls
  463  clear
  464  ls
  465  cd diff/
  466  ls
  467  cd ..
  468  ls
  469  cd ..
  470  ls
  471  cd aa848cfb097894a9bd57c711ec0280597bf622b28e7724288b0aec5132a52f95
  472  lks
  473  ls
  474  clear
  475  ls
  476  cd diff/
  477  ls
  478  clear
  479  cd ..
  480  ls
  481  cd ..
  482  ls
  483  docker run -itd ubuntu
  484  docker ps
  485  ls
  486  du -sh 2c13a5c9fc1ed2149bbde785006817d62bcea5399cead7d2cfcd8c0b51a04972-init
  487  du -sh 2c13a5c9fc1ed2149bbde785006817d62bcea5399cead7d2cfcd8c0b51a04972
  488  cd 2c13a5c9fc1ed2149bbde785006817d62bcea5399cead7d2cfcd8c0b51a04972
  489  clear
  490  ls
  491  cd diff/
  492  ls
  493  cd ..
  494  ls
  495  cd merged/
  496  ls
  497  cd ..
  498  clear
  499  ls
  500  df -kh
  501  docker run -itd ubuntu
  502  df -kh
  503  clear
  504  docker ps
  505  docker stop 14fedb637d28
  506  df -kh
  507  docker start 14fedb637d28
  508  df -kh

=============================================================
=============================================================
How to create an Images?
==============================
Manual - ONE LAYER AT TIME
-- Using Existing Container

Automated - MULTIPLE LAYER AT TIME
-- Using Dockerfile


Image Requirement
=========================
base - ubuntu
	git
	java
	apache2
=========================
What is Dockerfile?
	- file 
	container instructions for each layer

Sample - 
dockerfile
------------------
FROM ubuntu
MAINTAINER Rajesh Kumar <rajesh@devopsschool.com>
ARG DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install apache2 -y && apt-get install -y tzdata
RUN apt-get install git -y
RUN apt-get install openjdk-8-jre -y

Rule of Dockerfile
=============
- Each line in dockerfile - create one layer.
- Each layer get created from the container of Previous line layer


FROM ubuntu
MAINTAINER Rajesh Kumarsdsd dsa <rajesh@devopsschool.com>
RUN touch /opt/devopsschool1.txt
RUN touch /opt/devopsschool2.txt
RUN touch /opt/devopsschool3.txt

  567  clear
  568  clear
  569  docker ps
  570  docker commit -m"up-up-git-java-ap" -a
  571  docker commit -m"up-up-git-java-ap" -a
  572  docker commit -m"up-up-git-java-ap" -a"Rajesh Kumar" b294b7128d39 up-up-git-java-ap
  573  clear
  574  docker images



 593  ls
  594  vi dockerfile
  595  docker build -t raju .
  596  vi dockerfile
  597  docker build -t raju .
  598  vi dockerfile
  599  docker build -t raju .
  600  vi dockerfile
  601  docker build -t raju .
  602  docker images
  603  docker history raju
  604  clear
  605  ls
  606  docker doc1
  607  vi doc1
  608  docker build -t doc1 -f doc1 .
  609  clear
  610  cd -
  611  find . -name devopsschool*






